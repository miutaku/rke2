---
- name: disabled install-recommends
  lineinfile:
    path: "/etc/apt/apt.conf.d/00-no-install-recommends"
    line: "{{ item }}"
    create: true
    state: present
  with_items:
    - 'APT::Install-Suggests 0;'
    - 'APT::Install-Recommends 0;'

- name: upgraded apt packages
  apt:
    name: '*'
    state: latest
    update_cache: true
    autoremove: true

- name: installed packages
  apt:
    name: "{{ item }}"
    state: present
    update_cache: true
  with_items:
    - vim

- name: installed untested-upgrades
  apt:
    name:
      - unattended-upgrades
      - apt-listchanges
    state: present
    update_cache: true

- name: enabled 20auto-upgrades for unattended upgrades
  lineinfile:
    path: "/etc/apt/apt.conf.d/20auto-upgrades"
    line: "{{ item }}"
    create: true
    state: present
  with_items:
    - 'APT::Periodic::Update-Package-Lists "1";'
    - 'APT::Periodic::Unattended-Upgrade "1";'
  notify:
    - restarted unattended-upgrade services

- name: enabled 50unattended-upgrades for unattended upgrades
  template:
    src: "50unattended-upgrades.j2"
    dest: "/etc/apt/apt.conf.d/50unattended-upgrades"
    mode: "0644"
    owner: root
    group: root
  notify:
    - restarted unattended-upgrade services

- name: Initialized bitwarden vault
  shell:
    cmd: "bw sync"
    executable: "/bin/bash"
  delegate_to: localhost
  check_mode: false
  changed_when: false

- name: Unlocked bitwarden vault with generated session key
  shell:
    cmd: "bw unlock {{ bw_passwd }} --raw"
    executable: "/bin/bash"
  environment:
    PATH: "{{ lookup('env', 'PATH') }}"
  delegate_to: localhost
  run_once: true
  register: bw_session_key
  check_mode: false
  changed_when: false
  notify:
    - locked bitwarden vault

- name: get ssh public key from bitwarden
  shell:
    cmd: "bw get item {{ bw_credentials.ssh }} --session {{ bw_session_key.stdout }} | jq -r .sshKey.publicKey"
    executable: "/bin/bash"
  delegate_to: localhost
  run_once: true
  register: ssh_public_key
  check_mode: false
  changed_when: false

- name: pushed ssh public key
  authorized_key:
    user: "{{ ansible_ssh_user }}"
    state: present
    key: "{{ ssh_public_key.stdout }}"
  register: ssh_key

- name: disabled ssh password authentication
  lineinfile:
    path: "/etc/ssh/sshd_config"
    line: "{{ item }}"
    create: true
    state: present
    validate: "/usr/sbin/sshd -t -f %s"
  with_items:
    - "PasswordAuthentication no"
    - "PermitRootLogin yes"
  notify:
    - restarted ssh
